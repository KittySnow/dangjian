package ${package_name}.controller;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import cn.dlb.web.ResultUtil;
import cn.dlbdata.dangjian.admin.dao.model.${model};
import cn.dlbdata.dangjian.admin.dao.model.${model}Example;
import cn.dlbdata.ad.service.${model}Service;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
@Controller
@RequestMapping("/${mapperLowerCase}")

public class ${model}Controller{

    @Autowired
    private ${model}Service ${mapper}Service;


    @RequestMapping(value="/save",method=RequestMethod.POST)
    @ResponseBody
    public Map<String, Object> save(${model} ${mapper}){
        ResultUtil result = new ResultUtil();
        int callbackId = ${mapper}Service.insert(${mapper});
        result.setData(callbackId);
        result.setSuccess(true);
        return result.getResult();
    }

    @RequestMapping(value="/getList",method=RequestMethod.GET)
    @ResponseBody
    public Map<String, Object> getList(Integer pageNum, Integer pageSize){
        ResultUtil result = new ResultUtil();
        List<${model}> ${mapper}List = ${mapper}Service.selectByExample(new ${model}Example());
        result.setSuccess(true);
        result.setData(${mapper}List);
        return result.getResult();
    }

    @RequestMapping(value="/list",method=RequestMethod.GET)
    @ResponseBody
    public Map<String, Object> list(Integer pageNum, Integer pageSize){
        ResultUtil result = new ResultUtil();
        PageHelper.startPage(pageNum, pageSize,true);
        List<${model}> ${mapper}List = ${mapper}Service.selectByExample(new ${model}Example());
        PageInfo<${model}> p=new PageInfo<${model}>(${mapper}List);
        result.setSuccess(true);
        result.setData(p);
        return result.getResult();
    }

    @RequestMapping(value="/deleteById",method=RequestMethod.POST)
    @ResponseBody
    public Map<String, Object> deleteById(Integer ${smallKey}){
        ResultUtil result = new ResultUtil();
        ${model}Example example = new ${model}Example();
        if(${mapper}Service.deleteByPrimaryKey(${smallKey})>0){
            result.setSuccess(true);
            result.setMsg("删除成功");
        }else{
            result.setMsg("删除失败");
            result.setSuccess(false);
        }
        return result.getResult();
    }


    @RequestMapping(value="/updateById",method=RequestMethod.POST)
    @ResponseBody
    public Map<String, Object> updateById(${model} ${mapper}){
        ResultUtil result = new ResultUtil();
        if(${mapper}Service.updateByPrimaryKey(${mapper})>0){
            result.setSuccess(true);
            result.setMsg("修改成功");
        }else{
            result.setSuccess(false);
            result.setMsg("修改失败");
        }
        return result.getResult();
    }

    @RequestMapping(value="/queryById",method=RequestMethod.GET)
    @ResponseBody
    public Map<String, Object> queryById(Integer ${smallKey}){
        ResultUtil result = new ResultUtil();
        ${model} ${mapper} = ${mapper}Service.selectByPrimaryKey(${smallKey});
        result.setSuccess(true);
        result.setData(${mapper});
        return result.getResult();
    }
}