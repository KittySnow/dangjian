<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dlbdata.dangjian.admin.dao.mapper.PScorePartyDao">
  <resultMap id="BaseResultMap" type="cn.dlbdata.dangjian.admin.dao.model.PScoreParty">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="detail_id" jdbcType="INTEGER" property="detailId" />
    <result column="score" jdbcType="DECIMAL" property="score" />
    <result column="typetotalscore" jdbcType="DECIMAL" property="typetotalscore" />
    <result column="adder_id" jdbcType="INTEGER" property="adderId" />
    <result column="approved_id" jdbcType="INTEGER" property="approvedId" />
    <result column="approved_name" jdbcType="VARCHAR" property="approvedName" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="score_time" jdbcType="TIMESTAMP" property="scoreTime" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="add_id" jdbcType="INTEGER" property="addId" />
    <result column="valid_yn" jdbcType="CHAR" property="validYn" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="status_cd" jdbcType="CHAR" property="statusCd" />
    <result column="imgs" jdbcType="VARCHAR" property="imgs" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, detail_id, score, adder_id, approved_id, year, score_time, add_time,
    add_id, valid_yn, user_id, status_cd, imgs, remark , ( select name from p_partymember where p_partymember.userid = approved_id ) as approved_name
  </sql>
  <select id="selectByExample" parameterType="cn.dlbdata.dangjian.admin.dao.model.PScorePartyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from p_score_party
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from p_score_party
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from p_score_party
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.dlbdata.dangjian.admin.dao.model.PScorePartyExample">
    delete from p_score_party
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.dlbdata.dangjian.admin.dao.model.PScoreParty">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into p_score_party (project_id, detail_id,
      score, adder_id, approved_id,
      year, score_time, add_time,
      add_id, valid_yn, user_id,
      status_cd, imgs, remark
      )
    values (#{projectId,jdbcType=INTEGER}, #{detailId,jdbcType=INTEGER},
      #{score,jdbcType=DECIMAL}, #{adderId,jdbcType=INTEGER}, #{approvedId,jdbcType=INTEGER},
      #{year,jdbcType=INTEGER}, #{scoreTime,jdbcType=TIMESTAMP}, #{addTime,jdbcType=TIMESTAMP},
      #{addId,jdbcType=INTEGER}, #{validYn,jdbcType=CHAR}, #{userId,jdbcType=INTEGER},
      #{statusCd,jdbcType=CHAR}, #{imgs,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>


  <insert id="insertSelective" parameterType="cn.dlbdata.dangjian.admin.dao.model.PScoreParty">
    insert into p_score_party
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="detailId != null">
        detail_id,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="adderId != null">
        adder_id,
      </if>
      <if test="approvedId != null">
        approved_id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="scoreTime != null">
        score_time,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="addId != null">
        add_id,
      </if>
      <if test="validYn != null">
        valid_yn,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="statusCd != null">
        status_cd,
      </if>
      <if test="imgs != null">
        imgs,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="detailId != null">
        #{detailId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="adderId != null">
        #{adderId,jdbcType=INTEGER},
      </if>
      <if test="approvedId != null">
        #{approvedId,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="scoreTime != null">
        #{scoreTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addId != null">
        #{addId,jdbcType=INTEGER},
      </if>
      <if test="validYn != null">
        #{validYn,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="statusCd != null">
        #{statusCd,jdbcType=CHAR},
      </if>
      <if test="imgs != null">
        #{imgs,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.dlbdata.dangjian.admin.dao.model.PScorePartyExample" resultType="java.lang.Long">
    select count(*) from p_score_party
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update p_score_party
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.detailId != null">
        detail_id = #{record.detailId,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=DECIMAL},
      </if>
      <if test="record.adderId != null">
        adder_id = #{record.adderId,jdbcType=INTEGER},
      </if>
      <if test="record.approvedId != null">
        approved_id = #{record.approvedId,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.scoreTime != null">
        score_time = #{record.scoreTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addId != null">
        add_id = #{record.addId,jdbcType=INTEGER},
      </if>
      <if test="record.validYn != null">
        valid_yn = #{record.validYn,jdbcType=CHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.statusCd != null">
        status_cd = #{record.statusCd,jdbcType=CHAR},
      </if>
      <if test="record.imgs != null">
        imgs = #{record.imgs,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update p_score_party
    set id = #{record.id,jdbcType=INTEGER},
    project_id = #{record.projectId,jdbcType=INTEGER},
    detail_id = #{record.detailId,jdbcType=INTEGER},
    score = #{record.score,jdbcType=DECIMAL},
    adder_id = #{record.adderId,jdbcType=INTEGER},
    approved_id = #{record.approvedId,jdbcType=INTEGER},
    year = #{record.year,jdbcType=INTEGER},
    score_time = #{record.scoreTime,jdbcType=TIMESTAMP},
    add_time = #{record.addTime,jdbcType=TIMESTAMP},
    add_id = #{record.addId,jdbcType=INTEGER},
    valid_yn = #{record.validYn,jdbcType=CHAR},
    user_id = #{record.userId,jdbcType=INTEGER},
    status_cd = #{record.statusCd,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.dlbdata.dangjian.admin.dao.model.PScoreParty">
    update p_score_party
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="detailId != null">
        detail_id = #{detailId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DECIMAL},
      </if>
      <if test="adderId != null">
        adder_id = #{adderId,jdbcType=INTEGER},
      </if>
      <if test="approvedId != null">
        approved_id = #{approvedId,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="scoreTime != null">
        score_time = #{scoreTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addId != null">
        add_id = #{addId,jdbcType=INTEGER},
      </if>
      <if test="validYn != null">
        valid_yn = #{validYn,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="statusCd != null">
        status_cd = #{statusCd,jdbcType=CHAR},
      </if>
      <if test="imgs != null">
        imgs = #{imgs,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.dlbdata.dangjian.admin.dao.model.PScoreParty">
    update p_score_party
    set project_id = #{projectId,jdbcType=INTEGER},
    detail_id = #{detailId,jdbcType=INTEGER},
    score = #{score,jdbcType=DECIMAL},
    adder_id = #{adderId,jdbcType=INTEGER},
    approved_id = #{approvedId,jdbcType=INTEGER},
    year = #{year,jdbcType=INTEGER},
    score_time = #{scoreTime,jdbcType=TIMESTAMP},
    add_time = #{addTime,jdbcType=TIMESTAMP},
    add_id = #{addId,jdbcType=INTEGER},
    valid_yn = #{validYn,jdbcType=CHAR},
    user_id = #{userId,jdbcType=INTEGER},
    status_cd = #{statusCd,jdbcType=CHAR},
    imgs = #{record.imgs,jdbcType=VARCHAR},
    remark = #{record.remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="updateScanCode" parameterType="cn.dlbdata.dangjian.admin.dao.model.PScoreParty">
      <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
          SELECT LAST_INSERT_ID()
      </selectKey>
      insert into p_score_party (
        project_id,
        detail_id,
        score,
        adder_id,
        approved_id,
        year,
        score_time,
        add_time,
        add_id,
        valid_yn,
        user_id
      )
      SELECT
        t.project_id,
        t.id,
        t.score,
        null,
        NULL,
        extract(year from now()),
        NOW(),
        NOW(),
        0,
        'Y',
        #{userId,jdbcType=INTEGER}
      FROM p_score_detail t INNER JOIN p_score_project p ON t.project_id = p.id
        <!-- 仅针对扫码添加积分的部分 -->
        WHERE t.id = #{detailId,jdbcType=INTEGER} AND t.score_get_method_cd = '10'
        <!-- 获得的总积分必须小于项目的总分才允许再次获取 -->
        <![CDATA[
          AND ifnull ((SELECT  sum(s.score) FROM p_score_party s where s.detail_id = t.id
            AND s.user_id=#{userId,jdbcType=INTEGER} AND s.year = extract(year from now())),0) < p.score
        ]]>
        <!-- 如果项目只能获取一次积分且党员已经获取过，则不再允许获取积分 -->
      AND NOT EXISTS (SELECT 1 FROM p_score_party s where s.detail_id = t.id
        AND s.user_id=#{userId,jdbcType=INTEGER} AND s.year = extract(year from now()) AND t.only_yn = 'Y')
  </insert>

    <insert id="updateScoreCustom" parameterType="cn.dlbdata.dangjian.admin.dao.model.PScoreParty">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into p_score_party (
            project_id,
            detail_id,
            score,
            adder_id,
            approved_id,
            year,
            score_time,
            add_time,
            add_id,
            valid_yn,
            user_id,
            status_cd
        )
        SELECT
            t.project_id,
            t.id,
            #{score},
            #{adderId},
            #{approvedId},
            extract(year from now()),
            NOW(),
            NOW(),
            0,
            'Y',
            #{userId,jdbcType=INTEGER},
            (CASE
              <![CDATA[ WHEN t.approved_role_id IS NULL OR t.approved_role_id <= 0 THEN '30' ]]>
              ELSE '10'
            END )
        FROM p_score_detail t INNER JOIN p_score_project p ON t.project_id = p.id
        WHERE t.id = #{detailId,jdbcType=INTEGER} and t.score >= #{score} AND t.score_get_method_cd != '10'
        <![CDATA[
          AND ifnull ((SELECT  sum(s.score) FROM p_score_party s where s.detail_id = t.id
            AND s.user_id=#{userId,jdbcType=INTEGER} AND s.year = extract(year from now())),0) < p.score
        ]]>
        AND NOT EXISTS (SELECT 1 FROM p_score_party s where s.detail_id = t.id
        AND s.user_id=#{userId,jdbcType=INTEGER} AND s.year = extract(year from now()) AND t.only_yn = 'Y')
    </insert>

    <update id="updateAudit" parameterType="cn.dlbdata.dangjian.admin.dao.model.PScoreParty">
        update p_score_party
        set status_cd = #{statusCd},
          approved_id = #{approvedId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER} and status_cd = '10'
    </update>




    <insert id="updateSscoreClean" parameterType="cn.dlbdata.dangjian.admin.dao.model.PScoreParty">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into p_score_party (
            project_id,
            detail_id,
            score,
            adder_id,
            approved_id,
            year,
            score_time,
            add_time,
            add_id,
      <if test="imgs != null">
        imgs,
      </if>
      <if test="remark != null">
        remark,
      </if>
            valid_yn,
            user_id
        )
        SELECT
            t.project_id,
            6,
            (sum(t.score)*-1)+ifnull((SELECT sum(s.score)*-1 from p_score_party s where s.year = t.year
                and s.user_id = t.user_id and s.detail_id = 6
            ),0),
            #{adderId,jdbcType=INTEGER},
            NULL,
            t.year,
            NOW(),
            NOW(),
            0,
      <if test="imgs != null">
        #{imgs,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
            'Y',
            t.user_id
        FROM p_score_party t where t.user_id = #{userId,jdbcType=INTEGER} AND t.detail_id = 5 AND t.year = extract(year from now())
        GROUP BY t.project_id,t.year HAVING sum(t.score) > ifnull((SELECT sum(s.score)*-1 from p_score_party s where s.year = t.year
          and s.user_id = t.user_id and s.detail_id = 6
        ),0)
    </insert>

  <select id="getProjectScoreByUserId" parameterType="Map" resultMap="BaseResultMap">
    select p_score_party.project_id, table2.project_name, sum(p_score_party.score) as typetotalscore
    from p_score_party  inner join p_score_project table2 on p_score_party.project_id = table2.id
    where user_id=#{userId,jdbcType=INTEGER} and year=#{year,jdbcType=INTEGER} group by table2.id;
  </select>

  <select id="getSumScoreByUserId" parameterType="Map" resultType="java.lang.Double">
    select sum(p_score_party.score) from p_score_party where user_id=#{userId,jdbcType=INTEGER} and year=#{year,jdbcType=INTEGER};
  </select>


  <select id="getDakDetialByDepartmentId" parameterType="Map" resultMap="BaseResultMap">
    select u.name as approved_name,
	(CASE
		WHEN (SELECT COUNT(1) FROM p_score_party sp where sp.user_id = p.user_id and sp.detail_id = 6 and sp.year = p.year) > 0 THEN 'Y'
		ELSE 'N'
	END) as "valid_yn",
	SUM(CASE
		WHEN (SELECT COUNT(1) FROM p_score_party sp where sp.user_id = p.user_id and sp.detail_id = 6 and sp.year = p.year) > 0 THEN 0
		ELSE p.score
	END) as "typetotalscore"
from p_score_party p INNER JOIN p_partymember u ON p.user_id = u.userid
where p.project_id = 5 and  u.departmentid =  #{departmentId,jdbcType=INTEGER}
GROUP BY p.user_id,u.name
  </select>


  <select id="isInsertRights" parameterType="cn.dlbdata.dangjian.admin.dao.model.PScoreParty" resultMap="BaseResultMap">
    SELECT
    t.project_id,
    t.id,
    t.score
    FROM p_score_detail t INNER JOIN p_score_project p ON t.project_id = p.id
    WHERE t.id = #{detailId,jdbcType=INTEGER}
    <![CDATA[
          AND ifnull ((SELECT  sum(s.score) FROM p_score_party s where s.detail_id = t.id
            AND s.user_id=#{userId,jdbcType=INTEGER} AND s.year = extract(year from now())),0) < p.score
        ]]>
    AND NOT EXISTS (SELECT 1 FROM p_score_party s where s.detail_id = t.id
    AND s.user_id=#{userId,jdbcType=INTEGER} AND s.year = extract(year from now()) AND t.only_yn = 'Y')
  </select>


</mapper>