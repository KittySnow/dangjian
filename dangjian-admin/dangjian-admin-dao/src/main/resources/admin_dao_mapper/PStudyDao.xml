<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dlbdata.dangjian.admin.dao.mapper.PStudyDao">
  <resultMap id="BaseResultMap" type="cn.dlbdata.dangjian.admin.dao.model.PStudy">
    <id column="studyid" jdbcType="INTEGER" property="studyid" />
    <result column="starttime" jdbcType="TIMESTAMP" property="starttime" />
    <result column="endtime" jdbcType="TIMESTAMP" property="endtime" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="departmentid" jdbcType="INTEGER" property="departmentid" />
    <result column="projectid" jdbcType="INTEGER" property="projectid" />
    <result column="moduleid" jdbcType="INTEGER" property="moduleid" />
    <result column="approvalid" jdbcType="INTEGER" property="approvalid" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_userid" jdbcType="INTEGER" property="createUserid" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="rejectreason" jdbcType="VARCHAR" property="rejectreason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    studyid, starttime, endtime, content, departmentid, projectid, moduleid, approvalid, 
    status, create_userid, createtime, rejectreason
  </sql>
  <select id="selectByExample" parameterType="cn.dlbdata.dangjian.admin.dao.model.PStudyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from p_study
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_study
    where studyid = #{studyid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from p_study
    where studyid = #{studyid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.dlbdata.dangjian.admin.dao.model.PStudyExample">
    delete from p_study
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.dlbdata.dangjian.admin.dao.model.PStudy">
    <selectKey keyProperty="studyid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID() AS studyid
    </selectKey>
    insert into p_study (starttime, endtime,
      content, departmentid, projectid, 
      moduleid, approvalid, status, 
      create_userid, createtime, rejectreason,
      picid
      )
    values
    <foreach collection ="pStudy.picIds" item="picId" index="index" separator =",">
    (#{pStudy.starttime,jdbcType=TIMESTAMP}, #{pStudy.endtime,jdbcType=TIMESTAMP},
      #{pStudy.content,jdbcType=VARCHAR}, #{pStudy.departmentid,jdbcType=INTEGER}, #{pStudy.projectid,jdbcType=INTEGER},
      #{pStudy.moduleid,jdbcType=INTEGER}, #{pStudy.approvalid,jdbcType=INTEGER}, #{pStudy.status,jdbcType=INTEGER},
      #{pStudy.createUserid,jdbcType=INTEGER}, #{pStudy.createtime,jdbcType=TIMESTAMP}, #{pStudy.rejectreason,jdbcType=VARCHAR},
      #{picId,jdbcType=INTEGER}
      )
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="cn.dlbdata.dangjian.admin.dao.model.PStudy">
    <selectKey keyProperty="studyid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID() AS studyid
    </selectKey>
    insert into p_study
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studyid != null">
        studyid,
      </if>
      <if test="starttime != null">
        starttime,
      </if>
      <if test="endtime != null">
        endtime,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="departmentid != null">
        departmentid,
      </if>
      <if test="projectid != null">
        projectid,
      </if>
      <if test="moduleid != null">
        moduleid,
      </if>
      <if test="approvalid != null">
        approvalid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createUserid != null">
        create_userid,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="rejectreason != null">
        rejectreason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studyid != null">
        #{studyid,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null">
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="projectid != null">
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="moduleid != null">
        #{moduleid,jdbcType=INTEGER},
      </if>
      <if test="approvalid != null">
        #{approvalid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createUserid != null">
        #{createUserid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="rejectreason != null">
        #{rejectreason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.dlbdata.dangjian.admin.dao.model.PStudyExample" resultType="java.lang.Long">
    select count(*) from p_study
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update p_study
    <set>
      <if test="record.studyid != null">
        studyid = #{record.studyid,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null">
        starttime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null">
        endtime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentid != null">
        departmentid = #{record.departmentid,jdbcType=INTEGER},
      </if>
      <if test="record.projectid != null">
        projectid = #{record.projectid,jdbcType=INTEGER},
      </if>
      <if test="record.moduleid != null">
        moduleid = #{record.moduleid,jdbcType=INTEGER},
      </if>
      <if test="record.approvalid != null">
        approvalid = #{record.approvalid,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createUserid != null">
        create_userid = #{record.createUserid,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rejectreason != null">
        rejectreason = #{record.rejectreason,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update p_study
    set studyid = #{record.studyid,jdbcType=INTEGER},
      starttime = #{record.starttime,jdbcType=TIMESTAMP},
      endtime = #{record.endtime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=VARCHAR},
      departmentid = #{record.departmentid,jdbcType=INTEGER},
      projectid = #{record.projectid,jdbcType=INTEGER},
      moduleid = #{record.moduleid,jdbcType=INTEGER},
      approvalid = #{record.approvalid,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_userid = #{record.createUserid,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      rejectreason = #{record.rejectreason,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.dlbdata.dangjian.admin.dao.model.PStudy">
    update p_study
    <set>
      <if test="starttime != null">
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        endtime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null">
        departmentid = #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="projectid != null">
        projectid = #{projectid,jdbcType=INTEGER},
      </if>
      <if test="moduleid != null">
        moduleid = #{moduleid,jdbcType=INTEGER},
      </if>
      <if test="approvalid != null">
        approvalid = #{approvalid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createUserid != null">
        create_userid = #{createUserid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="rejectreason != null">
        rejectreason = #{rejectreason,jdbcType=VARCHAR},
      </if>
    </set>
    where studyid = #{studyid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.dlbdata.dangjian.admin.dao.model.PStudy">
    update p_study
    set starttime = #{starttime,jdbcType=TIMESTAMP},
      endtime = #{endtime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      departmentid = #{departmentid,jdbcType=INTEGER},
      projectid = #{projectid,jdbcType=INTEGER},
      moduleid = #{moduleid,jdbcType=INTEGER},
      approvalid = #{approvalid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_userid = #{createUserid,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      rejectreason = #{rejectreason,jdbcType=VARCHAR}
    where studyid = #{studyid,jdbcType=INTEGER}
  </update>
</mapper>