<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dlbdata.dangjian.admin.dao.mapper.PPartymemberDao">
  <resultMap id="BaseResultMap" type="cn.dlbdata.dangjian.admin.dao.model.PPartymember">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="userName" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="fromdepartmentid" jdbcType="INTEGER" property="fromdepartmentid" />
    <result column="userroleid" jdbcType="INTEGER" property="userRoleId" />
    <result column="bid" jdbcType="INTEGER" property="bid" />
    <result column="departmentid" jdbcType="INTEGER" property="departmentid" />
    <result column="fromdepartmentname" jdbcType="VARCHAR" property="fromdepartmentname" />
    <result column="departmentname" jdbcType="VARCHAR" property="departmentname" />
    <result column="totalscore" jdbcType="DOUBLE" property="totalScore" />
    <result column="tempint" jdbcType="INTEGER" property="tempint" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userid, name, sex, age, phone, idcard, fromdepartmentid, bid, departmentid,avatar ,
    (select u.name username from p_user u where u.userid = p_partymember.userid )as username,
    (select departmentname from p_department d where d.departmentid = p_partymember.departmentid )as departmentname,
    (select departmentname from p_department d where d.departmentid = p_partymember.fromdepartmentid )as fromdepartmentname,
    (select sum(table1.score) from p_score_party table1  where table1.user_id = p_partymember.userid and year = (select year(now()) )) as totalscore
  </sql>
  
  
    <sql id="Base_Column_List_two">
    id, userid, name, sex, age, phone, idcard, fromdepartmentid, bid, departmentid,avatar ,
    (select u.name username from p_user u where u.userid = p_partymember.userid )as username,
    (select u.roleid userroleid from p_user u where u.userid = p_partymember.userid )as userroleid,
    (select departmentname from p_department d where d.departmentid = p_partymember.departmentid )as departmentname,
    (select departmentname from p_department d where d.departmentid = p_partymember.fromdepartmentid )as fromdepartmentname,
    (select sum(table1.score) from p_score_party table1  where table1.user_id = p_partymember.userid and year = (select year(now()) )) as totalscore
  </sql>
  <select id="selectByExample" parameterType="cn.dlbdata.dangjian.admin.dao.model.PPartymemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List_two" />
    from p_partymember 
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
      order by userroleid  
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select id, userid, name, sex, age, phone, idcard, fromdepartmentid, bid, departmentid,avatar
    from p_partymember
    limit 1000
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from p_partymember
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from p_partymember
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.dlbdata.dangjian.admin.dao.model.PPartymemberExample">
    delete from p_partymember
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.dlbdata.dangjian.admin.dao.model.PPartymember">
    insert into p_partymember (id, userid, name,
    sex, age, phone, idcard,
    fromdepartmentid, bid, departmentid,
    avatar)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
    #{sex,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR},
    #{fromdepartmentid,jdbcType=INTEGER}, #{bid,jdbcType=INTEGER}, #{departmentid,jdbcType=INTEGER},
    #{avatar,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.dlbdata.dangjian.admin.dao.model.PPartymember">
    insert into p_partymember
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="fromdepartmentid != null">
        fromdepartmentid,
      </if>
      <if test="bid != null">
        bid,
      </if>
      <if test="departmentid != null">
        departmentid,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="fromdepartmentid != null">
        #{fromdepartmentid,jdbcType=INTEGER},
      </if>
      <if test="bid != null">
        #{bid,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null">
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.dlbdata.dangjian.admin.dao.model.PPartymemberExample" resultType="java.lang.Long">
    select count(*) from p_partymember
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update p_partymember
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.fromdepartmentid != null">
        fromdepartmentid = #{record.fromdepartmentid,jdbcType=INTEGER},
      </if>
      <if test="record.bid != null">
        bid = #{record.bid,jdbcType=INTEGER},
      </if>
      <if test="record.departmentid != null">
        departmentid = #{record.departmentid,jdbcType=INTEGER},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update p_partymember
    set id = #{record.id,jdbcType=INTEGER},
    userid = #{record.userid,jdbcType=INTEGER},
    name = #{record.name,jdbcType=VARCHAR},
    sex = #{record.sex,jdbcType=VARCHAR},
    age = #{record.age,jdbcType=INTEGER},
    phone = #{record.phone,jdbcType=VARCHAR},
    idcard = #{record.idcard,jdbcType=VARCHAR},
    fromdepartmentid = #{record.fromdepartmentid,jdbcType=INTEGER},
    bid = #{record.bid,jdbcType=INTEGER},
    departmentid = #{record.departmentid,jdbcType=INTEGER},
    avatar = #{record.avatar,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.dlbdata.dangjian.admin.dao.model.PPartymember">
    update p_partymember
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="fromdepartmentid != null">
        fromdepartmentid = #{fromdepartmentid,jdbcType=INTEGER},
      </if>
      <if test="bid != null">
        bid = #{bid,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null">
        departmentid = #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.dlbdata.dangjian.admin.dao.model.PPartymember">
    update p_partymember
    set userid = #{userid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      fromdepartmentid = #{fromdepartmentid,jdbcType=INTEGER},
      bid = #{bid,jdbcType=INTEGER},
      departmentid = #{departmentid,jdbcType=INTEGER},
      avatar = #{avatar,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getPartymemberByDepartmentid" resultMap="BaseResultMap" parameterType="Map">
    select p_partymember.id,p_partymember.userid , name, sex, age, phone, idcard, fromdepartmentid, bid, p_partymember.departmentid,
      (select departmentname from p_department d where d.departmentid = p_partymember.departmentid )as departmentname,
       (select departmentname from p_department d where d.departmentid = p_partymember.fromdepartmentid )as fromdepartmentname,
      (select sum(table1.score) from p_score_party table1 where table1.user_id = p_partymember.userid and year = (select year(now()) )) as totalscore ,
      (select distinct p_avantgrade.status ) as tempint from p_partymember
    left join p_avantgrade on p_avantgrade.partmentid = p_partymember.id
    where p_partymember.departmentid = #{departmentid,jdbcType=INTEGER}
    <if test="status != null">
      and p_avantgrade.status=#{status,jdbcType=INTEGER}</if>

  </select>
  
  <select id="queryAreaListById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	select p.id, p.name
  	from p_partymember p, p_user u where u.userid = p.userid and u.roleid = 2
  </select>
</mapper>